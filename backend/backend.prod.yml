version: "3.9"

networks:
  bloom:
    external: true

# Base anchors so we can keep things DRY
x-svc-base: &svc_base
  networks: [bloom]
  env_file: [.env]

x-deploy-base: &deploy_base
  replicas: 1
  restart_policy:
    condition: on-failure
    delay: 5s
    max_attempts: 3
  update_config:
    order: start-first
    parallelism: 1
    delay: 5s
  rollback_config:
    order: stop-first
    parallelism: 1
  placement:
    # <<< IMPORTANT: run only on nodes you label as "group=core"
    constraints:
      - node.labels.group == core

services:
  # ---------- Public entrypoint ----------
  api-gateway:
    image: registry.bloomi5.com/api-gateway:prod
    <<: *svc_base
    environment:
      PORT: 3000
      API_PREFIX: /api/v1
      AUTH_SERVICE_URL: http://auth-service:3001
      USER_SERVICE_URL: http://user-service:3002
      PRODUCT_SERVICE_URL: http://product-service:3003
      ORDER_SERVICE_URL: http://order-service:3004
      STORE_SERVICE_URL: http://store-service:3005
      CONTENT_SERVICE_URL: http://content-service:3006
      CONFIG_SERVICE_URL: http://config-service:3007
      SHIPPING_SERVICE_URL: http://shipping-service:3008
      ERP_SERVICE_URL: http://erp-service:3009
      UTILITY_SERVICE_URL: http://utility-service:3010
    deploy:
      <<: *deploy_base
      labels:
        - traefik.enable=true
        - traefik.swarm.network=bloom

        # Define the router
        - traefik.http.routers.api.rule=Host(`api.bloomi5.com`)
        - traefik.http.routers.api.entrypoints=websecure
        - traefik.http.routers.api.tls=true
        - traefik.http.routers.api.tls.certresolver=leHttp

        # Service to route to internal port 3000
        - traefik.http.services.api-svc.loadbalancer.server.port=3000
        - traefik.http.routers.api.service=api-svc

        # CORS settings - adjust as needed
        - traefik.http.middlewares.cors-api.headers.accessControlAllowOrigin=*
        - traefik.http.middlewares.cors-api.headers.accessControlAllowMethods=GET,POST,PUT,PATCH,DELETE,OPTIONS
        - traefik.http.middlewares.cors-api.headers.accessControlAllowHeaders=Content-Type,Authorization,Source
        - traefik.http.middlewares.cors-api.headers.accessControlAllowCredentials=false
        - traefik.http.middlewares.cors-api.headers.accessControlMaxAge=86400
        - traefik.http.middlewares.cors-api.headers.addVaryHeader=true

        - traefik.http.routers.api.middlewares=cors-api

  # ---------- Internal microservices (no public routes) ----------
  auth-service:
    image: registry.bloomi5.com/auth-service:prod
    <<: *svc_base
    environment: { PORT: 3001 }
    deploy: { <<: *deploy_base }

  user-service:
    image: registry.bloomi5.com/user-service:prod
    <<: *svc_base
    environment: { PORT: 3002 }
    deploy: { <<: *deploy_base }

  product-service:
    image: registry.bloomi5.com/product-service:prod
    <<: *svc_base
    environment: { PORT: 3003 }
    deploy: { <<: *deploy_base }

  order-service:
    image: registry.bloomi5.com/order-service:prod
    <<: *svc_base
    environment: { PORT: 3004 }
    deploy: { <<: *deploy_base }

  store-service:
    image: registry.bloomi5.com/store-service:prod
    <<: *svc_base
    environment: { PORT: 3005 }
    deploy: { <<: *deploy_base }

  content-service:
    image: registry.bloomi5.com/content-service:prod
    <<: *svc_base
    environment: { PORT: 3006 }
    deploy: { <<: *deploy_base }

  config-service:
    image: registry.bloomi5.com/config-service:prod
    <<: *svc_base
    environment: { PORT: 3007 }
    deploy: { <<: *deploy_base }

  shipping-service:
    image: registry.bloomi5.com/shipping-service:prod
    <<: *svc_base
    environment: { PORT: 3008 }
    deploy: { <<: *deploy_base }

  erp-service:
    image: registry.bloomi5.com/erp-service:prod
    <<: *svc_base
    environment: { PORT: 3009 }
    deploy: { <<: *deploy_base }

  utility-service:
    image: registry.bloomi5.com/utility-service:prod
    <<: *svc_base
    environment: { PORT: 3010 }
    deploy: { <<: *deploy_base }
